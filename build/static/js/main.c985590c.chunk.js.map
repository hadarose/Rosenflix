{"version":3,"sources":["pages/Movies/MoviesContextAPI.js","pages/Members/MembersContextAPI.js","pages/WatchedList/MovieWatchedList.js","pages/Movies/Movie.js","pages/Movies/Movies.js","pages/Movies/MovieSingle.js","shared/id-utils.js","pages/SuccessMsg.js","pages/Movies/AddNewMovie.js","pages/Movies/EditMovie.js","shared/date-utils.js","pages/WatchedList/AddToWatched.js","pages/WatchedList/MemberWatchedList.js","pages/Members/Member.js","pages/Members/Members.js","pages/Members/MemberSingle.js","shared/email-utils.js","pages/Members/AddNewMember.js","pages/Members/EditMember.js","pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["MoviesContext","createContext","MoviesContextProvider","props","useState","restMovies","setRestMovies","movies","setMovies","useEffect","axios","get","then","resp","data","splice","sort","a","b","keyA","name","toLowerCase","keyB","Provider","value","children","MembersContext","MembersContextProvider","restMembers","setRestMembers","members","setMembers","MovieWatchedList","history","useHistory","subscribers","watched","map","subObj","index","key","to","onClick","id","subId","push","style","textDecoration","color","subscriber","dateWatched","paddingLeft","textAlign","Movie","useContext","showWatched","setShowWatched","classes","makeStyles","root","width","margin","backgroundColor","marginLeft","media","height","maxWidth","maxHeight","useStyles","genres","movie","genre","Card","className","CardActionArea","CardContent","CardMedia","component","image","medium","Typography","align","gutterBottom","variant","premiered","substring","CardActions","Button","size","movieIndex","findIndex","item","filter","find","watchedItem","movieToWatch","forEach","watchedMember","watchedIndex","movieObj","movieId","Movies","showMovies","setShowMovies","marginRight","TextField","label","top","marginBottom","onChange","movieName","filteredResults","includes","filterMoviesByMovieName","target","length","Grid","container","spacing","Paper","MovieSingle","setName","setGenres","url","setUrl","date","setDate","setWatched","useParams","currentMovie","toString","genresStr","join","getLastId","arr","lastId","SuccessMsg","type","action","AddNewMovie","Date","selectedDate","setSelectedDate","showForm","setShowForm","isAdded","setIsAdded","isAllValid","setIsAllValid","noValidate","autoComplete","evt","placeholder","inputGenres","split","utils","DateFnsUtils","justify","showTodayButton","format","year","getFullYear","month","getMonth","day","getDate","pickedDate","concat","toUpperCase","disabled","newMovie","EditMovie","newName","setNewName","newGenres","setNewGenres","newUrl","setNewUrl","newDate","setNewDate","isDateChanged","setDateChanged","isEdited","setIsEdited","dateString","match","cleanDateString","replace","parseInt","substr","daysInMonth","isValidDate","alt","src","error","helperText","AddToWatched","theme","formControl","minWidth","selectedMovie","setSelectedMovie","optionItems","MenuItem","background","ListItemText","primary","fontSize","borderRadius","border","FormControl","InputLabel","Select","event","member","newWatched","dateToWatch","newMember","address","city","email","MemberWatchedList","watchedItems","Member","showMenu","setShowMenu","objectFit","AccountCircleIcon","button","startIcon","watchedMovie","memberObj","Members","showMembers","setShowMembers","memberName","filterMembersByMemberName","MemberSingle","setEmail","setCity","currentMember","isValidEmail","test","AddNewMember","isEmailEmpty","setEmailEmpty","saveNewEmail","EditMember","newCity","setNewCity","newEmail","setNewEmail","isEmailChanged","setEmailChanged","getEmail","MainPage","href","Link","exact","path","MovieSingleComp","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c985590c.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const MoviesContext = createContext();\r\nexport const MoviesContextProvider = (props) => {\r\n    const [restMovies, setRestMovies] = useState([]);\r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://api.tvmaze.com/shows\").then(resp => setRestMovies(resp.data.splice(0, 20)));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setMovies(movies => [...movies, ...restMovies])\r\n\r\n    }, [restMovies])\r\n\r\n    useEffect(() => {\r\n        movies.sort(function (a, b) {\r\n            const keyA = a.name.toLowerCase(), keyB = b.name.toLowerCase();\r\n\r\n            if (keyA < keyB) return -1;\r\n            if (keyA > keyB) return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n    }, [movies])\r\n\r\n    return (\r\n        <MoviesContext.Provider value={[movies, setMovies]}>\r\n            {props.children}\r\n        </MoviesContext.Provider>)\r\n}\r\n\r\n\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const MembersContext = createContext();\r\nexport const MembersContextProvider = (props) => {\r\n    const [restMembers, setRestMembers] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/users\").then(resp => setRestMembers(resp.data));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setMembers(members => [...members, ...restMembers]);\r\n\r\n        // Sorting the members array by name\r\n        members.sort(function (a, b) {\r\n            const keyA = a.name.toLowerCase(), keyB = b.name.toLowerCase();\r\n\r\n            if (keyA < keyB) return -1;\r\n            if (keyA > keyB) return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n    }, [restMembers])\r\n\r\n    return (\r\n        <MembersContext.Provider value={[members, setMembers]}>\r\n            {props.children}\r\n        </MembersContext.Provider>)\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction MovieWatchedList(props) {\r\n    const history = useHistory();\r\n    const goToMember = (id) => {\r\n        history.push('/rosenflix/members/' + id);\r\n    }\r\n\r\n    let subscribers = props.watched.map((subObj, index) => {\r\n        return <li key={index}>\r\n            <Link to=\"#\" onClick={() => goToMember(subObj.subId)}\r\n                style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                {subObj.subscriber}, {subObj.dateWatched}\r\n            </Link>\r\n        </li>\r\n    });\r\n\r\n    return (<div>\r\n\r\n        <div style={{ paddingLeft: \"20px\", textAlign: \"left\" }}>Watched List:\r\n                        <ul style={{ paddingLeft: \"20px\" }}>{subscribers}</ul>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MovieWatchedList","import React, { useContext, useState } from 'react';\r\nimport { MoviesContext } from \"./MoviesContextAPI\";\r\nimport { MembersContext } from \"../Members/MembersContextAPI\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport MovieWatchedList from \"../WatchedList/MovieWatchedList\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"../../index.css\";\r\n\r\nfunction Movie(props) {\r\n    const history = useHistory();\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [members] = useContext(MembersContext);\r\n    const [showWatched, setShowWatched] = useState(false);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: 350,\r\n            margin: 10,\r\n            backgroundColor: \"#212625\",\r\n            color: \"white\",\r\n            marginLeft: 2,\r\n        },\r\n        media: {\r\n            height: \"75%\",\r\n            width: \"75%\",\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"100%\",\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    let genres = props.movie.genres.map((genre, index) => {\r\n        return <span key={index}> {genre} |</span>\r\n    })\r\n\r\n    const deleteMovie = () => {\r\n        // Finding the index of the movie to be deleted\r\n        let movieIndex = movies.findIndex(item => item.id === props.movie.id);\r\n        movies.splice(movieIndex, 1);\r\n        setMovies([...movies]);\r\n\r\n        // Finding the members who watched the deleted movie\r\n        let haveWatchedMembers = members.filter(item => item.watched)\r\n            .filter(item => item.watched.find(watchedItem => watchedItem.movieToWatch === props.movie.name))\r\n\r\n        // Deleting the movie from each member watched array\r\n        haveWatchedMembers.forEach(watchedMember => {\r\n            let watchedIndex = watchedMember.watched.findIndex(movieObj => movieObj.movieId === props.movie.id);\r\n            watchedMember.watched.splice(watchedIndex, 1);\r\n        })\r\n\r\n        // Redirect to movies so it renders after deletion\r\n        history.push('/rosenflix/movies');\r\n    }\r\n\r\n    const goToEditMovie = () => {\r\n        history.push('/rosenflix/edit-movie/' + props.movie.id);\r\n    }\r\n\r\n    const goToMovie = () => {\r\n        history.push('/rosenflix/movies/' + props.movie.id)\r\n    }\r\n\r\n    const checkWatched = () => {\r\n\r\n        if (props.movie.watched) {\r\n\r\n            setShowWatched(!showWatched);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} >\r\n                <CardActionArea onClick={goToMovie}>\r\n                    <CardContent >\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            className={classes.media}\r\n                            image={props.movie.image.medium}>\r\n                        </CardMedia>\r\n\r\n                        <Typography className={classes.root}\r\n                            align=\"left\"\r\n                            gutterBottom variant=\"h6\"\r\n                            component=\"h3\">\r\n                            {props.movie.name} | {props.movie.premiered.substring(0, 4)}\r\n                        </Typography>\r\n                        <Typography className={classes.root}\r\n                            align=\"left\"\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\">\r\n                            {genres}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <div className=\"btnsMainDiv\">\r\n                    <div className=\"btnsDiv\" >\r\n                        <CardActions>\r\n                            <Button\r\n                                onClick={goToEditMovie}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Edit</Button>\r\n                            <Button\r\n                                onClick={deleteMovie}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Delete</Button>\r\n                            <Button\r\n                                onClick={checkWatched}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Watched List</Button>\r\n                        </CardActions>\r\n                    </div>\r\n                </div>\r\n\r\n                {showWatched ? <div>\r\n                    <MovieWatchedList watched={props.movie.watched} />\r\n                </div> : \"\"}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie;\r\n\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { MoviesContext } from \"./MoviesContextAPI\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Movie from \"./Movie\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"../../index.css\";\r\n\r\nfunction Movies() {\r\n    const history = useHistory();\r\n    const [movies] = useContext(MoviesContext)\r\n    const [showMovies, setShowMovies] = useState(movies);\r\n\r\n\r\n    useEffect(() => {\r\n        if (movies) {\r\n            setShowMovies(movies)\r\n        }\r\n    }, [movies])\r\n\r\n    const filterMoviesByMovieName = (movieName) => {\r\n        const filteredResults = movies.filter((movie) => movie.name.toLowerCase()\r\n            .includes(movieName.toLowerCase()));\r\n\r\n        setShowMovies(filteredResults);\r\n    }\r\n\r\n    const goToAddMovie = () => {\r\n        history.push('/rosenflix/add-new-movie');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ marginRight: \"10px\" }}\r\n                onClick={goToAddMovie}>Add A New Movie</Button>\r\n\r\n            <TextField\r\n                id=\"outlined-margin-dense\"\r\n                size=\"small\"\r\n                label=\"Search By Name\" variant=\"outlined\"\r\n                style={{ top: \"-2px\", marginRight: \"10px\", marginBottom: \"10px\" }}\r\n                onChange={({ target }) => filterMoviesByMovieName(target.value)} />\r\n\r\n            {showMovies.length > 0 ? (\r\n                <div className=\"moviesDiv\">\r\n                    <Grid container spacing={3}>\r\n                        {showMovies.map(movie => <Paper><Movie\r\n                            movie={movie} /></Paper>)}\r\n                    </Grid>\r\n                </div>\r\n            ) : <h2 className=\"addNewMsg\">\r\n                    Sorry, didn't find what you were looking for, try again! </h2>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies;","import React, { useContext, useState, useEffect } from 'react';\r\nimport { MoviesContext } from \"./MoviesContextAPI\";\r\nimport { MembersContext } from \"../Members/MembersContextAPI\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport MovieWatchedList from \"../WatchedList/MovieWatchedList\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction MovieSingle() {\r\n    const history = useHistory();\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [members] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\");\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [genres, setGenres] = useState([]);\r\n    const [url, setUrl] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [watched, setWatched] = useState([]);\r\n    const [showWatched, setShowWatched] = useState(false);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            maxWidth: \"100%\",\r\n            backgroundColor: \"#212625\",\r\n            color: \"white\",\r\n            marginLeft: 2,\r\n        },\r\n        media: {\r\n            height: \"60%\",\r\n            width: \"40%\",\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const id = useParams().id;\r\n\r\n    let currentMovie = movies.filter(movie => movie.id.toString() === id);\r\n\r\n    useEffect(() => {\r\n        setName(currentMovie[0] && currentMovie[0].name);\r\n        setUrl(currentMovie[0] && currentMovie[0].image.medium);\r\n        setGenres(currentMovie[0] && currentMovie[0].genres);\r\n        setDate(currentMovie[0] && currentMovie[0].premiered.substring(0, 4));\r\n\r\n        if (currentMovie[0] && currentMovie[0].watched) {\r\n            setWatched(currentMovie[0] && currentMovie[0].watched);\r\n        }\r\n\r\n    }, [currentMovie])\r\n\r\n    const genresStr = currentMovie[0] && currentMovie[0].genres.join(\", \");\r\n\r\n    const deleteMovie = () => {\r\n        // Finding the index of the movie to be deleted\r\n        let movieIndex = movies.findIndex(item => item.id === id);\r\n        movies.splice(movieIndex, 1);\r\n        setMovies([...movies]);\r\n\r\n        // Finding the members who watched the deleted movie\r\n        let haveWatchedMembers = members.filter(item => item.watched)\r\n            .filter(item => item.watched.find(watchedItem => watchedItem.movieToWatch === name))\r\n\r\n        // Deleting the movie from each member watched array\r\n        haveWatchedMembers.forEach(watchedMember => {\r\n            let watchedIndex = watchedMember.watched.findIndex(movieObj => movieObj.movieId === id);\r\n            watchedMember.watched.splice(watchedIndex, 1);\r\n        })\r\n\r\n        // Redirect to movies so it renders after deletion\r\n        history.push('/rosenflix/movies');\r\n    }\r\n\r\n\r\n    const goToEditMovie = () => {\r\n        history.push('/rosenflix/edit-movie/' + id);\r\n    }\r\n\r\n    const checkWatched = () => {\r\n        if (watched.length > 0) {\r\n            setShowWatched(!showWatched);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div  >\r\n            <Card className={classes.root} >\r\n                <CardActionArea>\r\n                    <CardContent >\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            className={classes.media}\r\n                            image={url}>\r\n                        </CardMedia>\r\n\r\n                        <br />\r\n                        <Typography className={classes.root}\r\n                            align=\"left\"\r\n                            gutterBottom variant=\"h6\"\r\n                            component=\"h3\">\r\n                            {name} | {date}\r\n                        </Typography>\r\n                        <Typography className={classes.root}\r\n                            align=\"left\"\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\">\r\n                            {genresStr}\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n\r\n                <CardActions >\r\n                    <Button onClick={goToEditMovie}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">Edit</Button>\r\n                    <Button onClick={deleteMovie}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">Delete</Button>\r\n                    <Button onClick={checkWatched}\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\">Watched List</Button>\r\n                </CardActions>\r\n\r\n                {showWatched ? <div >\r\n                    <MovieWatchedList watched={watched} />\r\n                </div> : \"\"}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieSingle;\r\n","// Assist function that receives an array and returns last id\r\nexport function getLastId(arr) {\r\n    let lastId = 0;\r\n\r\n    if (arr[arr.length - 1]) {\r\n        lastId = arr[arr.length - 1].id;\r\n    }\r\n    return lastId;\r\n}","import React from \"react\";\r\n\r\nfunction SuccessMsg(props) {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        The {props.type} '<em className=\"addNewMsg\">{props.name}</em>'<br />\r\n        Was {props.action} Successfully\r\n      </h1>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuccessMsg;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MoviesContext } from \"./MoviesContextAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../../index.css\";\r\nimport { getLastId } from \"../../shared/id-utils\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SuccessMsg from \"../SuccessMsg\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction AddNewMovie() {\r\n  const history = useHistory();\r\n  const [movies, setMovies] = useContext(MoviesContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [genres, setGenres] = useState([]);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [isAllValid, setIsAllValid] = useState(true);\r\n\r\n  const setNewGenres = (evt) => {\r\n    let inputGenres = evt.target.value;\r\n    inputGenres = inputGenres.split(\",\");\r\n    setGenres(inputGenres);\r\n  };\r\n\r\n  const setNewDate = (evt) => {\r\n    let year = evt.getFullYear().toString();\r\n    let month = (evt.getMonth() + 1).toString();\r\n    let day = evt.getDate().toString();\r\n    let pickedDate = year.concat(\"-\", month, \"-\", day);\r\n    setSelectedDate(pickedDate);\r\n  };\r\n\r\n  const addMovie = () => {\r\n    // Getting last Id from movies\r\n    let lastMovieId = getLastId(movies);\r\n    let newMovie = {\r\n      id: lastMovieId + 1,\r\n      name: name,\r\n      genres: genres,\r\n      image: { medium: url },\r\n      premiered: selectedDate,\r\n    };\r\n    setMovies([...movies, newMovie]);\r\n    setIsAdded(!isAdded);\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkValid = () => {\r\n      if (name !== \"\" && genres.length > 0) {\r\n        setIsAllValid(false);\r\n      }\r\n    };\r\n\r\n    checkValid();\r\n  }, [name, genres]);\r\n\r\n  const goToMovies = () => {\r\n    // Redirect to movies so it renders after addition\r\n    history.push(\"/rosenflix/movies\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showForm ? (\r\n        <div>\r\n          <form className=\"form\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              onChange={(evt) => setName(evt.target.value)}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Genres\"\r\n              variant=\"outlined\"\r\n              placeholder=\"separate with a comma\"\r\n              onChange={setNewGenres}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Image URL\"\r\n              variant=\"outlined\"\r\n              placeholder=\"www.example.com/img\"\r\n              onChange={(evt) => setUrl(evt.target.value)}\r\n            />\r\n            <br />\r\n            <div>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                  <KeyboardDatePicker\r\n                    showTodayButton={true}\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Date\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={setNewDate}\r\n                  />\r\n                </Grid>\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <br />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isAdded ? (\r\n        <SuccessMsg type=\"Movie\" name={name.toUpperCase()} action=\"Added\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <br />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginRight: \"10px\" }}\r\n        disabled={isAllValid}\r\n        onClick={addMovie}\r\n      >\r\n        Add New\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={goToMovies}>\r\n        Back To Movies\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewMovie;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { MoviesContext } from \"./MoviesContextAPI\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { isValidDate } from \"../../shared/date-utils\";\r\nimport \"../../index.css\";\r\nimport SuccessMsg from \"../SuccessMsg\";\r\n\r\nfunction EditMovie() {\r\n  const history = useHistory();\r\n  const [movies, setMovies] = useContext(MoviesContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [newName, setNewName] = useState(\"\");\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [genres, setGenres] = useState([]);\r\n  const [newGenres, setNewGenres] = useState([]);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [newUrl, setNewUrl] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n  const [isDateChanged, setDateChanged] = useState(false);\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const [isAllValid, setIsAllValid] = useState(true);\r\n\r\n  const getNewGenres = (evt) => {\r\n    let inputGenres = evt.target.value;\r\n    inputGenres = inputGenres.split(\",\");\r\n    setNewGenres(inputGenres);\r\n  };\r\n\r\n  const getDate = (evt) => {\r\n    setDateChanged(!isDateChanged);\r\n\r\n    if (isValidDate(evt.target.value)) {\r\n      setNewDate(evt.target.value);\r\n    }\r\n  };\r\n\r\n  const id = useParams().id;\r\n  let currentMovie = movies.filter((movie) => movie.id.toString() === id);\r\n\r\n  useEffect(() => {\r\n    setName(currentMovie[0] && currentMovie[0].name);\r\n    setUrl(currentMovie[0] && currentMovie[0].image.medium);\r\n    setGenres(currentMovie[0] && currentMovie[0].genres);\r\n    setDate(currentMovie[0] && currentMovie[0].premiered);\r\n  }, [currentMovie]);\r\n\r\n  const genresStr = currentMovie[0] && currentMovie[0].genres.join(\", \");\r\n\r\n  const editMovie = () => {\r\n    // Deleting the current Movie\r\n    let index = movies.findIndex((movie) => movie.id.toString() === id);\r\n    movies.splice(index, 1);\r\n\r\n    let newMovie = {\r\n      id: id,\r\n      name: newName,\r\n      genres: newGenres,\r\n      image: { medium: newUrl },\r\n      premiered: newDate,\r\n    };\r\n\r\n    setMovies([...movies, newMovie]);\r\n\r\n    setIsEdited(!isEdited);\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkValid = () => {\r\n      if (newName !== \"\") {\r\n        setIsAllValid(false);\r\n      }\r\n    };\r\n    checkValid();\r\n  }, [newName, newUrl, newDate, newGenres]);\r\n\r\n  const goToMovies = () => {\r\n    // Redirect to movies so it renders after addition\r\n    history.push(\"/rosenflix/movies\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showForm ? (\r\n        <div className=\"mainDiv\">\r\n          <img alt={name} src={url} />\r\n          <form className=\"form\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Update Name\"\r\n              placeholder={name}\r\n              variant=\"outlined\"\r\n              onChange={(evt) => setNewName(evt.target.value)}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Update Genres\"\r\n              variant=\"outlined\"\r\n              placeholder={genresStr}\r\n              onChange={getNewGenres}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Update Image Url\"\r\n              variant=\"outlined\"\r\n              placeholder={url}\r\n              onChange={(evt) => setNewUrl(evt.target.value)}\r\n            />\r\n            <br />\r\n\r\n            {isDateChanged ? (\r\n              <TextField\r\n                error\r\n                id=\"outlined-error-helper-text\"\r\n                helperText=\"Format: yyyy-dd-mm\"\r\n                label={date}\r\n                variant=\"outlined\"\r\n                placeholder={date}\r\n                onChange={getDate}\r\n              />\r\n            ) : (\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Update Premiere Date\"\r\n                variant=\"outlined\"\r\n                placeholder={date}\r\n                onChange={getDate}\r\n              />\r\n            )}\r\n            <br />\r\n            <br />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isEdited ? (\r\n        <SuccessMsg type=\"Movie\" name={name.toUpperCase()} action=\"Updated\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <br />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        disabled={isAllValid}\r\n        onClick={editMovie}\r\n      >\r\n        Edit Movie\r\n      </Button>\r\n\r\n      <br />\r\n      <br />\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={goToMovies}>\r\n        Back To Movies\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMovie;\r\n","// Assist function that validates date\r\nexport function isValidDate(dateString) {\r\n\r\n    // Date format: YYYY-MM-DD\r\n    let datePattern = /^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\r\n\r\n    // Check if the date string format is a match\r\n    let matchArray = dateString.match(datePattern);\r\n    if (matchArray == null) {\r\n        return false;\r\n    }\r\n\r\n    // Remove any non digit characters\r\n    let cleanDateString = dateString.replace(/\\D/g, '');\r\n\r\n    // Parse integer values from date string\r\n    let year = parseInt(cleanDateString.substr(0, 4));\r\n    let month = parseInt(cleanDateString.substr(4, 2));\r\n    let day = parseInt(cleanDateString.substr(6, 2));\r\n\r\n    // Define number of days per month\r\n    let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n    // Adjust for leap years\r\n    if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0)) {\r\n        daysInMonth[1] = 29;\r\n    }\r\n\r\n    // check month and day range\r\n    return (month < 1 || month > 12 || day < 1 || day > daysInMonth[month - 1]);\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MoviesContext } from \"../Movies/MoviesContextAPI\";\r\nimport { MembersContext } from \"../Members/MembersContextAPI\";\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nfunction AddToWatched(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        formControl: {\r\n            margin: theme.spacing(0),\r\n            minWidth: 250,\r\n            marginBottom: 5\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [members, setMembers] = useContext(MembersContext)\r\n    const [selectedMovie, setSelectedMovie] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [showForm, setShowForm] = useState(true);\r\n    const [isDateChanged, setDateChanged] = useState(false);\r\n    const [isAllValid, setIsAllValid] = useState(true);\r\n\r\n    const selectMovie = (event) => {\r\n        setSelectedMovie(event.target.value);\r\n    };\r\n\r\n    const selectDate = (date) => {\r\n        setDateChanged(!isDateChanged)\r\n        setSelectedDate(date);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const checkValid = () => {\r\n            if (selectedMovie) {\r\n                setIsAllValid(false);\r\n            }\r\n        }\r\n        checkValid();\r\n\r\n\r\n    }, [isDateChanged, selectedMovie])\r\n\r\n    const addToWatched = () => {\r\n        // PART 1 - Movie related\r\n        //Finding the selected movie in Movies Array\r\n        let movieIndex = movies.findIndex(item => item.name === selectedMovie);\r\n\r\n        // Creating a duplicate movie with the new subscriber's details \r\n        let newMovie = movies[movieIndex];\r\n        let movieId = movies[movieIndex].id;\r\n\r\n        // Deleting the movie before inserting it updated with subscriber\r\n        movies.splice(movieIndex, 1);\r\n\r\n        if (!newMovie.watched) {\r\n            newMovie.watched = [{\r\n                subId: props.member.id,\r\n                subscriber: props.member.name,\r\n                dateWatched: selectedDate.toString().substr(4, 12)\r\n            }];\r\n        }\r\n        else {\r\n            newMovie.watched = [...newMovie.watched, {\r\n                subId: props.member.id,\r\n                subscriber: props.member.name,\r\n                dateWatched: selectedDate.toString().substr(4, 12)\r\n            }];\r\n        }\r\n\r\n        // Setting the updated Movie in Movies Array\r\n        setMovies([...movies, newMovie]);\r\n\r\n\r\n        // PART 2 - Member related\r\n        // Updating the NEW MOVIE in the MEMBER\r\n        let newWatched = {\r\n            movieId: movieId,\r\n            movieToWatch: selectedMovie,\r\n            dateToWatch: selectedDate.toString().substr(4, 12)\r\n        };\r\n\r\n        let newMember = {\r\n            id: props.member.id,\r\n            name: props.member.name,\r\n            address: { city: props.member.address.city },\r\n            email: props.member.email\r\n        }\r\n\r\n        if (!props.member.watched) {\r\n            newMember.watched = [newWatched];\r\n        }\r\n        else {\r\n            newMember.watched = [...props.member.watched, newWatched];\r\n        }\r\n\r\n        // Deleting the Member before inserting it updated\r\n        let index = members.findIndex(member => member.id === props.member.id);\r\n        members.splice(index, 1);\r\n\r\n        // Setting the updated member in Members Array\r\n        setMembers([...members, newMember]);\r\n        setShowForm(!showForm);\r\n    }\r\n\r\n    let optionItems = movies.map((movie) => {\r\n        return <MenuItem key={movie.id} value={movie.name} style={{ color: \"white\", background: \"#dc004e\" }} >\r\n\r\n            <ListItemText key={movie.id} primary={<div style={{ fontSize: 14 }}>{movie.name}</div>} />\r\n\r\n        </MenuItem>\r\n    })\r\n\r\n    return (\r\n        <div style={{\r\n            margin: \"15px\",\r\n            color: \"black\",\r\n            background: \"white\",\r\n            borderRadius: \"10px\",\r\n            border: \"1px solid black\"\r\n        }}>\r\n            {showForm ?\r\n                <div>\r\n                    <h3 >Add To Your Watch List</h3>\r\n                    <div >\r\n\r\n                        <div style={{ margin: \"5px\" }}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel style={{ fontSize: \"10\" }}>Subscribe To:</InputLabel>\r\n                                <Select style={{ background: \"lightgray\", width: \"650\" }}\r\n                                    value={selectedMovie}\r\n                                    onChange={selectMovie}>\r\n\r\n                                    {optionItems.length === 0 ?\r\n                                        <ListItemText primary={<div style={{ color: \"white\", background: \"#dc004e\", fontSize: 14 }}>\r\n                                            No Available Movies\r\n                                                    </div>} /> : optionItems}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n\r\n                        <div >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\" >\r\n                                    <KeyboardDatePicker\r\n                                        showTodayButton={true}\r\n                                        id=\"date-picker-dialog\"\r\n                                        label=\"Date\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        value={selectedDate}\r\n                                        onChange={selectDate} />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                        <div style={{ margin: \"15px\" }}>\r\n                            <Button disabled={isAllValid}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                onClick={addToWatched}>OK\r\n                    </Button>\r\n                        </div>\r\n                    </div>\r\n                </div> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToWatched;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction MemberWatchedList(props) {\r\n\r\n    const history = useHistory();\r\n    const goToMovie = (movieId) => {\r\n        history.push('/rosenflix/movies/' + movieId);\r\n    }\r\n\r\n    let watchedItems = props.watched.map((item, index) => {\r\n        return <li key={index}>\r\n            <Link to=\"#\" onClick={() => goToMovie(item.movieId)}\r\n                style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                {item.movieToWatch}, {item.dateToWatch}\r\n            </Link></li>\r\n    });\r\n\r\n    return (\r\n        <div style={{ paddingLeft: \"20px\", textAlign: \"left\" }}>Watched List:\r\n            <ul style={{ paddingLeft: \"20px\" }}>{watchedItems}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberWatchedList","import React, { useContext, useState } from 'react';\r\nimport { MembersContext } from \"./MembersContextAPI\";\r\nimport { MoviesContext } from \"../Movies/MoviesContextAPI\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport AddToWatched from \"../WatchedList/AddToWatched\";\r\nimport MemberWatchedList from \"../WatchedList/MemberWatchedList\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"../../index.css\";\r\n\r\nfunction Member(props) {\r\n    const history = useHistory();\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [movies] = useContext(MoviesContext);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showWatched, setShowWatched] = useState(false);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: 350,\r\n            margin: 10,\r\n            backgroundColor: \"#212625\",\r\n            color: \"white\",\r\n            marginLeft: 2,\r\n\r\n        },\r\n        media: {\r\n            height: 100,\r\n            width: \"100%\",\r\n            objectFit: \"scale-down\",\r\n            marginLeft: \"-100px\"\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const deleteMember = () => {\r\n        let index = members.findIndex(item => item.id === props.member.id);\r\n        members.splice(index, 1);\r\n        setMembers([...members]);\r\n\r\n        // Finding the movies that the deleted member apears in them\r\n        let haveWatchedMovies = movies.filter(item => item.watched)\r\n            .filter(item => item.watched.find(watchedItem => watchedItem.subscriber === props.member.name))\r\n\r\n        // Deleting the member from each movie watched array\r\n        haveWatchedMovies.forEach(watchedMovie => {\r\n            let watchedIndex = watchedMovie.watched.findIndex(memberObj => memberObj.subId === props.member.id);\r\n            watchedMovie.watched.splice(watchedIndex, 1);\r\n        })\r\n\r\n        // Redirect to members so it renders after deletion\r\n        history.push('/rosenflix/members');\r\n    }\r\n\r\n    const goToMember = () => {\r\n        history.push('/rosenflix/members/' + props.member.id);\r\n    }\r\n\r\n    const goToEditMember = () => {\r\n        history.push('/rosenflix/edit-member/' + props.member.id);\r\n    }\r\n\r\n    const checkWatched = () => {\r\n        if (props.member.watched) {\r\n            setShowWatched(!showWatched);\r\n        }\r\n    }\r\n\r\n    const goToAddToWatch = () => {\r\n        setShowMenu(!showMenu);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} >\r\n                <CardActionArea onClick={goToMember}>\r\n                    <CardContent ><br />\r\n                        <CardMedia component={AccountCircleIcon} className={classes.media} />\r\n\r\n                        <Typography\r\n                            className={classes.root}\r\n                            align=\"left\"\r\n                            gutterBottom variant=\"h6\"\r\n                            component=\"h3\"><b>{props.member.name}</b> |&nbsp;\r\n                            <small>{props.member.address.city}</small>\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                            className={classes.root}\r\n                            align=\"left\"\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\">\r\n                            {props.member.email}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n\r\n                <Button\r\n                    onClick={goToAddToWatch}\r\n                    variant=\"contained\"\r\n                    color=\"default\" size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<CloudUploadIcon />}>\r\n                    <small>Movie Subscribe</small>\r\n                </Button>\r\n\r\n                {showMenu ? <AddToWatched member={props.member} /> : \"\"}\r\n\r\n                <div className=\"btnsMainDiv\">\r\n                    <div className=\"btnsDiv\" >\r\n                        <CardActions >\r\n                            <Button\r\n                                onClick={goToEditMember}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Edit</Button>\r\n                            <Button\r\n                                onClick={deleteMember}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Delete</Button>\r\n                            <Button\r\n                                onClick={checkWatched}\r\n                                size=\"small\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\">Watched List</Button>\r\n                        </CardActions>\r\n                    </div>\r\n                </div>\r\n\r\n                {showWatched ? <div >\r\n                    <MemberWatchedList id={props.member.id} watched={props.member.watched} />\r\n                </div> : \"\"}\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member;\r\n\r\n\r\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { MembersContext } from \"./MembersContextAPI\";\nimport Member from \"./Member\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport \"../../index.css\";\n\nfunction Members() {\n  const history = useHistory();\n  const [members] = useContext(MembersContext);\n  const [showMembers, setShowMembers] = useState(members);\n\n\n  useEffect(() => {\n    if (members) {\n      setShowMembers(members)\n    }\n  }, [members])\n\n  const filterMembersByMemberName = (memberName) => {\n    const filteredResults = members.filter((member) => member.name.toLowerCase()\n      .includes(memberName.toLowerCase()));\n\n    setShowMembers(filteredResults);\n  }\n\n  members.sort(function (a, b) {\n    const keyA = a.name.toLowerCase(), keyB = b.name.toLowerCase();\n    if (keyA < keyB) return -1;\n    if (keyA > keyB) return 1;\n\n    return 0;\n  });\n\n  const goToAddMember = () => {\n    history.push('/rosenflix/add-new-member');\n  }\n\n  return (\n    <div>\n\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={{ marginRight: \"10px\" }}\n        onClick={goToAddMember}>Add A New Member</Button>\n\n      <TextField\n        id=\"outlined-margin-dense\"\n        size=\"small\"\n        label=\"Search By Name\"\n        variant=\"outlined\"\n        style={{ top: \"-2px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n        onChange={({ target }) => filterMembersByMemberName(target.value)} />\n\n      {showMembers.length > 0 ? (\n        <div className=\"membersDiv\">\n          <Grid container spacing={3}>\n            {showMembers.map(member => <Paper><Member member={member} /></Paper>)}\n          </Grid>\n        </div>\n      ) : <h2 className=\"addNewMsg\">\n          Sorry, didn't find what you were looking for, try again!\n            </h2>}\n\n    </div>\n  )\n}\n\nexport default Members;\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { MembersContext } from \"./MembersContextAPI\";\r\nimport { MoviesContext } from '../Movies/MoviesContextAPI';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport MemberWatchedList from \"../WatchedList/MemberWatchedList\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nfunction MemberSingle() {\r\n    const history = useHistory();\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [movies] = useContext(MoviesContext);\r\n    const [name, setName] = useState(\"\");\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [email, setEmail] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [watched, setWatched] = useState([]);\r\n    const [showWatched, setShowWatched] = useState(false);\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            width: 350,\r\n            margin: 10,\r\n            backgroundColor: \"#212625\",\r\n            color: \"white\",\r\n            marginLeft: 2,\r\n        },\r\n        media: {\r\n            height: 100,\r\n            width: \"100%\",\r\n            objectFit: \"scale-down\",\r\n            marginLeft: \"-100px\"\r\n        },\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const id = useParams().id;\r\n\r\n    let currentMember = members.filter(member => member.id.toString() === id);\r\n\r\n    useEffect(() => {\r\n        setName(currentMember[0] && currentMember[0].name);\r\n        setEmail(currentMember[0] && currentMember[0].email);\r\n        if (currentMember[0].watched) {\r\n            setWatched(currentMember[0] && currentMember[0].watched);\r\n        }\r\n\r\n        setCity(currentMember[0] && currentMember[0].address.city);\r\n    }, [currentMember])\r\n\r\n\r\n    const deleteMember = () => {\r\n        let index = members.findIndex(item => item.id.toString() === id);\r\n        members.splice(index, 1);\r\n        setMembers([...members]);\r\n\r\n        // Finding the movies that the deleted member apears in them\r\n        let haveWatchedMovies = movies.filter(item => item.watched)\r\n            .filter(item => item.watched.find(watchedItem => watchedItem.subscriber === name))\r\n\r\n        // Deleting the member from each movie watched array\r\n        haveWatchedMovies.forEach(watchedMovie => {\r\n            let watchedIndex = watchedMovie.watched.findIndex(memberObj => memberObj.subId === id);\r\n            watchedMovie.watched.splice(watchedIndex, 1);\r\n        })\r\n\r\n        // Redirect to movies so it renders after deletion\r\n        history.push('/rosenflix/members');\r\n    }\r\n\r\n    const goToEditMember = () => {\r\n        history.push('/rosenflix/edit-member/' + id);\r\n    }\r\n\r\n    const checkWatched = () => {\r\n        if (watched.length > 0) {\r\n            setShowWatched(!showWatched);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root} >\r\n                <CardActionArea>\r\n                    <CardContent><br />\r\n                        <CardMedia component={AccountCircleIcon} className={classes.media}></CardMedia>\r\n                        <br />\r\n                        <Typography className={classes.root} align=\"left\" gutterBottom variant=\"h6\"\r\n                            component=\"h3\"><b>{name}</b>  |&nbsp;<small>{city}</small></Typography>\r\n\r\n                        <Typography className={classes.root} align=\"left\" variant=\"body2\"\r\n                            color=\"textSecondary\" component=\"p\">{email}</Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n                <CardActions >\r\n                    <Button onClick={goToEditMember} size=\"small\" variant=\"contained\"\r\n                        color=\"secondary\">Edit</Button>\r\n                    <Button onClick={deleteMember} size=\"small\" variant=\"contained\"\r\n                        color=\"secondary\">Delete</Button>\r\n                    <Button onClick={checkWatched} size=\"small\" variant=\"contained\"\r\n                        color=\"secondary\">Watched List</Button>\r\n                </CardActions>\r\n\r\n                {showWatched ? <div >\r\n                    <MemberWatchedList id={id} watched={watched} />\r\n                </div> : \"\"}\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberSingle;\r\n\r\n","// Assist function to validates email\r\nexport function isValidEmail(email) {\r\n    return (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email));\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { MembersContext } from \"./MembersContextAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getLastId } from \"../../shared/id-utils\";\r\nimport { isValidEmail } from \"../../shared/email-utils\";\r\nimport SuccessMsg from \"../SuccessMsg\";\r\nimport \"../../index.css\";\r\n\r\nfunction AddNewMember() {\r\n  const history = useHistory();\r\n  const [members, setMembers] = useContext(MembersContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [isEmailEmpty, setEmailEmpty] = useState(true);\r\n  const [isAllValid, setIsAllValid] = useState(true);\r\n\r\n  const saveNewEmail = (evt) => {\r\n    if (isValidEmail(evt.target.value)) {\r\n      setEmail(evt.target.value);\r\n    } else {\r\n      setEmailEmpty(false);\r\n    }\r\n  };\r\n\r\n  const addMember = () => {\r\n    setEmailEmpty(true);\r\n\r\n    // Getting last Id from members\r\n    let lastMemberId = getLastId(members);\r\n    let newMember = {\r\n      id: lastMemberId + 1,\r\n      name: name,\r\n      email: email,\r\n      address: { city: city },\r\n    };\r\n    setMembers([...members, newMember]);\r\n    setIsAdded(!isAdded);\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkValid = () => {\r\n      if (name !== \"\" && city !== \"\" && isValidEmail(email)) {\r\n        setIsAllValid(false);\r\n      }\r\n    };\r\n\r\n    checkValid();\r\n  }, [name, email, city]);\r\n\r\n  const goToMembers = () => {\r\n    // Redirect to members so it renders after addition\r\n    history.push(\"/rosenflix/members\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showForm ? (\r\n        <div>\r\n          <form className=\"form\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              onChange={(evt) => setName(evt.target.value)}\r\n            />\r\n            <br />\r\n\r\n            {isEmailEmpty ? (\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                placeholder=\"e.g. hr@rosenwoman.com\"\r\n                onChange={saveNewEmail}\r\n              ></TextField>\r\n            ) : (\r\n              <TextField\r\n                error\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                helperText=\"Format: hr@rosenwoman.com\"\r\n                placeholder=\"e.g. hr@rosenwoman.com\"\r\n                onChange={saveNewEmail}\r\n              ></TextField>\r\n            )}\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"City\"\r\n              variant=\"outlined\"\r\n              onChange={(evt) => setCity(evt.target.value)}\r\n            />\r\n            <br />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isAdded ? (\r\n        <SuccessMsg type=\"Member\" name={name.toUpperCase()} action=\"Added\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <br />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginRight: \"10px\" }}\r\n        disabled={isAllValid}\r\n        onClick={addMember}\r\n      >\r\n        Add Member\r\n      </Button>\r\n      <br />\r\n      <br />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{ marginRight: \"10px\" }}\r\n        onClick={goToMembers}\r\n      >\r\n        Back To Members\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNewMember;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { MembersContext } from \"./MembersContextAPI\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { isValidEmail } from \"../../shared/email-utils\";\r\nimport \"../../index.css\";\r\nimport SuccessMsg from \"../SuccessMsg\";\r\n\r\nfunction EditMember() {\r\n  const history = useHistory();\r\n  const [members, setMembers] = useContext(MembersContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [newCity, setNewCity] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [isEmailChanged, setEmailChanged] = useState(false);\r\n  const [showForm, setShowForm] = useState(true);\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const [isAllValid, setIsAllValid] = useState(true);\r\n\r\n  const id = useParams().id;\r\n  let currentMember = members.filter((member) => member.id.toString() === id);\r\n\r\n  useEffect(() => {\r\n    setName(currentMember[0] && currentMember[0].name);\r\n    setEmail(currentMember[0] && currentMember[0].email);\r\n    setCity(currentMember[0] && currentMember[0].address.city);\r\n  }, [currentMember]);\r\n\r\n  const getEmail = (evt) => {\r\n    setEmailChanged(!isEmailChanged);\r\n    if (isValidEmail(evt.target.value)) {\r\n      setNewEmail(evt.target.value);\r\n    }\r\n  };\r\n\r\n  const editMember = () => {\r\n    // Deleting the current Member\r\n    let index = members.findIndex((member) => member.id.toString() === id);\r\n    members.splice(index, 1);\r\n\r\n    let newMember = {\r\n      id: id,\r\n      name: newName,\r\n      address: { city: newCity },\r\n      email: newEmail,\r\n    };\r\n\r\n    setMembers([...members, newMember]);\r\n\r\n    setIsEdited(!isEdited);\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkValid = () => {\r\n      if (newName !== \"\" && newCity !== \"\" && isValidEmail(newEmail)) {\r\n        setIsAllValid(false);\r\n      }\r\n    };\r\n    checkValid();\r\n  }, [newName, newEmail, newCity]);\r\n\r\n  const goToMembers = () => {\r\n    // Redirect to subscribers so it renders after addition\r\n    history.push(\"/rosenflix/members\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showForm ? (\r\n        <div className=\"mainDiv\">\r\n          <form className=\"form\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Update Name\"\r\n              variant=\"outlined\"\r\n              placeholder={name}\r\n              onChange={(evt) => setNewName(evt.target.value)}\r\n            />\r\n            <br />\r\n            {isEmailChanged ? (\r\n              <TextField\r\n                error\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Update Email\"\r\n                helperText=\"Format: hr@rosenwoman.com\"\r\n                variant=\"outlined\"\r\n                placeholder={email}\r\n                onChange={getEmail}\r\n              ></TextField>\r\n            ) : (\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Update Email\"\r\n                variant=\"outlined\"\r\n                placeholder={email}\r\n                onChange={getEmail}\r\n              ></TextField>\r\n            )}\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Update City\"\r\n              variant=\"outlined\"\r\n              placeholder={city}\r\n              onChange={(evt) => setNewCity(evt.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {isEdited ? (\r\n        <SuccessMsg type=\"Member\" name={name.toUpperCase()} action=\"Updated\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <br />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        disabled={isAllValid}\r\n        onClick={editMember}\r\n      >\r\n        Edit Member\r\n      </Button>\r\n      <br />\r\n      <br />\r\n\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={goToMembers}>\r\n        Back To Members\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditMember;\r\n","import React from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./MainPage.css\";\r\n\r\n// Movies\r\nimport { MoviesContextProvider } from \"./Movies/MoviesContextAPI\";\r\nimport Movies from \"./Movies/Movies\";\r\nimport MovieSingleComp from \"./Movies/MovieSingle\";\r\nimport AddNewMovie from \"./Movies/AddNewMovie\";\r\nimport EditMovie from \"./Movies/EditMovie\";\r\n\r\n// Members\r\nimport { MembersContextProvider } from \"./Members/MembersContextAPI\";\r\nimport Members from \"./Members/Members\";\r\nimport MemberSingle from \"./Members/MemberSingle\";\r\nimport AddNewMember from \"./Members/AddNewMember\";\r\nimport EditMember from \"./Members/EditMember\";\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div className=\"logoDiv\">\r\n      <a href=\"/rosenflix\" alt=\"Rose-N-Flix\" className=\"logoLink\">\r\n        <h1 className=\"logoHeadline\">\r\n          <em>Rose</em>\r\n          <img\r\n            alt=\"Netflix Icon\"\r\n            src=\"https://e1.pngegg.com/pngimages/10/90/png-clipart-clay-os-6-a-macos-icon-netflix-netflix-logo.png\"\r\n            className=\"logoImg\"\r\n          />\r\n          <em>Flix</em>\r\n        </h1>\r\n      </a>\r\n\r\n      <div className=\"mainBtnsDiv\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          style={{ marginRight: \"10px\" }}\r\n          component={Link}\r\n          to={\"/rosenflix/movies/\"}\r\n        >\r\n          Movies\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          component={Link}\r\n          to={\"/rosenflix/members/\"}\r\n        >\r\n          Members\r\n        </Button>\r\n      </div>\r\n\r\n      <MembersContextProvider>\r\n        <MoviesContextProvider>\r\n          <Switch>\r\n            <Route exact path=\"/rosenflix/movies\" component={Movies} />\r\n            <Route\r\n              exact\r\n              path=\"/rosenflix/movies/:id\"\r\n              component={MovieSingleComp}\r\n            />\r\n            <Route path=\"/rosenflix/add-new-movie\" component={AddNewMovie} />\r\n            <Route path=\"/rosenflix/edit-movie/:id\" component={EditMovie} />\r\n\r\n            <Route exact path=\"/rosenflix/members/\" component={Members} />\r\n            <Route\r\n              exact\r\n              path=\"/rosenflix/members/:id\"\r\n              component={MemberSingle}\r\n            />\r\n            <Route path=\"/rosenflix/add-new-member\" component={AddNewMember} />\r\n            <Route path=\"/rosenflix/edit-member/:id\" component={EditMember} />\r\n          </Switch>\r\n        </MoviesContextProvider>\r\n      </MembersContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\nimport MainPage from \"./pages/MainPage\";\n\nfunction App() {\n  return <MainPage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}